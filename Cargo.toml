[package]
name = "re-rolling"
version = "0.2.0"
edition = "2021"
rust-version = "1.75"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

# Features, profiles, and optimizations based on:
# https://github.com/TheBevyFlock/bevy_quickstart/blob/main/Cargo.toml

[features]
default = [
    # Default to dev build.
    "dev",
]
dev = [
    # Improve compile times for dev builds by linking Bevy as a dynamic library.
    "bevy/dynamic_linking",
    "bevy/bevy_dev_tools",
]
verbose_logs = []

[dependencies]
# For better sprite animations.
benimator = "4"
# To help with loading assets.
bevy_asset_loader = { version = "0.21", features = ["2d", "standard_dynamic_assets"] }
# To add support for loading RON config assets.
bevy_common_assets = { version = "0.11", features = ["ron"]}
# For in-game and debug UI.
bevy_egui = { version = "0.28", default-features = false }
# Generic debug UI to inspect entities and components.
# TODO: Put behind a feature flag?
bevy-inspector-egui = { version = "0.25", default-features = false, features = ["bevy_render", "highlight_changes"] }
# Audio support
bevy_kira_audio = { version = "0.20", default-features = false, features = ["ogg", "wav"] }
# 2D physics. Mostly used for collision detection.
bevy_rapier2d = "0.27"
# For simple declarative way to create bevy_ui nodes.
bevy-ui-dsl = "0.9"
# For quick, simple random number generation.
fastrand = "2"

# For saving window state.
serde = "1"
ron = "0.8"

# Base engine dependency.
[dependencies.bevy]
version = "0.14"
default-features = false
features = [
    # Multi-threading
    "multi_threaded",

    # App/game states
    "bevy_state",

    # Windowing
    "bevy_winit",
    "x11",

    # Input
    "bevy_gilrs",

    # Assets
    "bevy_asset",
    "png",

    # Colors
    "bevy_color",

    # Rendering
    "bevy_core_pipeline",
    "bevy_render",
    "bevy_sprite",
    "bevy_text",

    # UI
    "bevy_ui",
    "default_font",

    # Use webgl2 for web builds instead of wgpu
    "webgl2",
]
# Explicitly specify bevy_window to add serialize feature.
[dependencies.bevy_window]
version = "0.14"
features = ["serialize"]

[target.'cfg(target_arch = "wasm32")'.dependencies]
# Show panics in the browser console: https://bevy-cheatbook.github.io/platforms/wasm/panic-console.html
console_error_panic_hook = "0.1"

# Enable only a small amount of optimization in dev profile
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy) in dev profile
[profile.dev.package."*"]
opt-level = 3

# Remove expensive debug assertions due to <https://github.com/bevyengine/bevy/issues/14291>
# TODO: Check this issue when updating bevy/wgpu to see if we can remove this code.
[profile.dev.package.wgpu-types]
debug-assertions = false

# The default profile is optimized for Wasm builds since
# that's what [Trunk reads](https://github.com/trunk-rs/trunk/issues/605).
# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"

# Override some settings for native builds.
[profile.release-native]
# Default to release profile values.
inherits = "release"
# Optimize with performance in mind.
opt-level = 3
# Keep debug information in the binary.
strip = "none"
